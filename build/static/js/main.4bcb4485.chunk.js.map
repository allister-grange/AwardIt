{"version":3,"sources":["components/Copyright.tsx","components/SearchBar.tsx","HomePage.tsx","App.tsx","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","footer","position","left","bottom","right","paddingBottom","Copyright","Typography","className","variant","color","align","Link","href","root","display","justifyContent","alignContent","margin","spacing","textField","width","useOutlinedInputStyles","borderColor","focused","notchedOutline","SearchBar","props","classes","outlinedInputClasses","FormControl","style","clsx","InputLabel","htmlFor","OutlinedInput","fullWidth","id","value","onFocus","setIsSearchBarFocused","onChange","handleChange","onKeyPress","ev","key","onSearchClick","endAdornment","InputAdornment","IconButton","type","aria-label","onClick","isSearching","CircularProgress","size","labelWidth","require","config","CoinData","results","totalCost","coins","this","data","total_cost","createStyles","container","height","searchBar","paddingTop","awardsGrid","flexGrow","padding","paper","textAlign","palette","text","secondary","alignItems","background","awardCardText","paddingLeft","raisedSearchBar","errorText","textPadding","App","process","REDDIT_SECRET","apiPrice","useState","hasSearched","setHasSearched","errorOnSearch","setErrorOnSearch","noAwardsForPost","setNoAwardsForPost","setIsSearching","displayingCoins","setDisplayingCoins","undefined","setData","React","url","setUrl","roundToTwoDp","input","Math","round","Number","EPSILON","sortCoinsByDescendingPrice","coinA","coinB","priceA","coin_price","Container","maxWidth","Grid","direction","component","gutterBottom","axios","get","then","result","Object","keys","length","newCointData","sortedCoins","values","sort","catch","err","finally","prop","event","target","Slide","in","timeout","onEntered","onExiting","mountOnEnter","unmountOnExit","justify","map","coin","idx","item","lg","xl","xs","sm","md","Tooltip","TransitionComponent","Fade","TransitionProps","title","placement","arrow","Paper","Avatar","alt","name","src","icon","count","highestPossiblePrice","flexDirection","minHeight","flex","createMuiTheme","primary","main","error","red","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.4bcb4485.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport clsx from \"clsx\";\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n      position:'absolute',\n      left:0,\n      bottom:0,\n      right:0,\n      paddingBottom: '20px'\n    },\n  }));\n  \n\nexport default function Copyright() {\n\n    const classes = useStyles();\n  \n    return (\n        <Typography className='footer' variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {/* {'Copyright Â© '}\n          <Link color=\"inherit\" href=\"https://material-ui.com/\">\n            Allister Grange\n          </Link>{' '}\n          {new Date().getFullYear()}\n          {'.'}\n          <br /> */}\n          {'using estimates from the cheapest and most expensive bundles found on '}\n          <Link color=\"secondary\" href=\"https://www.reddit.com/coins/\">\n              {'reddit'}\n          </Link>\n          <br /> \n          {'made by Allister Grange '}\n         \n        </Typography>\n    );\n  }","import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Box from '@material-ui/core/Box';\n\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Search from '@material-ui/icons/Search'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignContent: 'center',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    width: '25ch',\n  },\n}));\n\nconst useOutlinedInputStyles = makeStyles(theme => ({\n  root: {\n    \"& $notchedOutline\": {\n      borderColor: \"grey\"\n    },\n    \"&:hover $notchedOutline\": {\n      borderColor: \"coral\",\n    },\n    \"&$focused $notchedOutline\": {\n      borderColor: \"coral\"\n    }\n  },\n  focused: {},\n  notchedOutline: {}\n}));\n\nexport default function SearchBar(props: any) {\n  const classes = useStyles();\n  const outlinedInputClasses = useOutlinedInputStyles();\n\n  return (\n    <div className={classes.root}>\n            <FormControl style={{width:'93%'}} className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n            <InputLabel htmlFor=\"outlined-adornment\">post url</InputLabel>\n            <OutlinedInput\n                fullWidth={true}\n                id=\"outlined-adornment\"\n                classes={outlinedInputClasses}\n                value={props.value}\n                onFocus={props.setIsSearchBarFocused(true)}\n                onChange={props.handleChange()}\n                onKeyPress={(ev) => {\n                  if (ev.key === 'Enter') {\n                      props.onSearchClick()\n                  }\n                }}          \n                endAdornment={\n                <InputAdornment position=\"end\">\n                    <IconButton type=\"submit\" aria-label=\"search\" onClick={props.onSearchClick}>\n                        {props.isSearching ? <CircularProgress style={{color: 'coral'}} size={28}/> :  <Search style={{color: 'coral'}}/>}\n                    </IconButton>\n                </InputAdornment>\n                }\n                labelWidth={55}\n            />\n            </FormControl>\n        </div>\n  );\n}","import React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Link from '@material-ui/core/Link';\nimport SearchBar from './components/SearchBar';\nimport Copyright from './components/Copyright';\nimport Fade from '@material-ui/core/Fade';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Slide from '@material-ui/core/Slide';\n\nimport clsx from \"clsx\";\n\nimport axios from 'axios';\n\nrequire('dotenv').config()\n\nclass CoinData {\n  totalCost?: number;\n  // todo change this into another object from an any\n  coins?: Array<any>;\n\n  constructor(results: any) {\n    // need to convert from object to array here\n    this.coins = results.data.coins;\n    this.totalCost = results.data.total_cost;\n    // console.log(results)\n  }\n}\n\nclass Coin {\n  coin_price: number;\n  count: number;\n  icon: string;\n  name: string;\n\n  constructor(coin_price: number, count: number, icon: string, name: string) {\n    this.coin_price = coin_price;\n    this.count = count;\n    this.icon = icon;\n    this.name = name;\n\n  }\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      height: '100%',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: '25ch',\n    },\n    searchBar: {\n      width: '100%',\n      paddingTop: 'calc(50vh - 200px)',\n    },\n    awardsGrid: {\n      flexGrow: 1,\n      padding: '50px',\n      paddingBottom: '0px',\n      paddingTop: '25px',\n      width: '100%'\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '80px',\n      display: 'flex',\n      alignItems: 'center',\n      '&:hover': {\n        background: \"coral\",\n        \"& $awardCardText\": {\n          color: \"white\"\n        }\n      },\n    },\n    awardCardText: {\n      paddingLeft: '15px',\n    },\n    raisedSearchBar: {\n      width: '100%',\n    },\n    errorText: {\n      paddingTop: '25px',\n      color: 'red'\n    },\n    textPadding: {\n      paddingTop: '25px'\n    }\n  }));\n\n\nexport default function App() {\n\n  //https://www.reddit.com/api/v1/authorize?client_id=T6Wd6ejCgIp1Pw&response_type=code&state=poo&redirect_uri=http://localhost:8080&duration=permanent&scope=identity\n\n  //todo figure out env files for client side\n  const lambdaEndPoint = 'https://q8sjefj7s6.execute-api.ap-southeast-2.amazonaws.com/default/RedditAwardCount?url=';\n  const secret = process.env.REDDIT_SECRET;\n\n  const classes = useStyles();\n\n  const [hasSearched, setHasSearched] = useState(false);\n  const [errorOnSearch, setErrorOnSearch] = useState(false);\n  const [noAwardsForPost, setNoAwardsForPost] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const [displayingCoins, setDisplayingCoins] = useState(false);\n  const [searchBarFocus, setIsSearchBarFocused] = useState(false);\n  const [data, setData] = useState(new CoinData({\n    data: {\n      coins: undefined,\n      total_cost: 0\n    }\n  }));\n  const [url, setUrl] = React.useState('');\n\n  const handleChange = (prop: any) => (event: any) => {\n    setUrl(event.target.value);\n  };\n\n  const highestPossiblePrice = (apiPrice: any) => {\n\n    const lowestCoinRatio: number = 1.99 / 500;\n\n    let highestCostPrice = lowestCoinRatio * apiPrice\n\n    return roundToTwoDp(highestCostPrice);\n  }\n\n  const lowestPossiblePrice = (apiPrice: any) => {\n\n    const highestCoinRatio: number = 99.99 / 40000;\n\n    let lowestCostPrice = highestCoinRatio * apiPrice\n\n    return roundToTwoDp(lowestCostPrice);\n  }\n\n  const roundToTwoDp = (input: number) => {\n    return Math.round((input + Number.EPSILON) * 100) / 100\n  }\n\n\n  const getDataFromAPI = () => {\n\n    // const httpOptions = {\n    //   headers: {\n    //     'Content-Type': 'application/x-www-form-urlencoded',\n    //     'Authorization': 'Bearer ',\n    //   },\n    // };\n\n    // return axios.get(lambdaEndPoint + 'ewt93j');\n    return axios.get(lambdaEndPoint + url);\n  }\n\n  const sortCoinsByDescendingPrice = (coinA: Coin, coinB: Coin) => {\n    const priceA = coinA.coin_price;\n    const priceB = coinB.coin_price;\n\n    return priceB - priceA;\n  }\n\n  //will be used for css transition\n  const onSearchClick = () => {\n\n    if (url === '')\n      return\n\n    setIsSearching(true)\n    setNoAwardsForPost(false)\n    setErrorOnSearch(false)\n\n    let result = getDataFromAPI().then((result) => {\n\n      // console.log(result)\n\n      if (Object.keys(result.data.coins).length === 0) {\n        //reset coins\n        let newCointData = {\n          data: {\n            total_cost: result.data.total_cost,\n            coins: undefined\n          }\n        }\n        setDisplayingCoins(false)\n        setData(new CoinData(newCointData))\n        setNoAwardsForPost(true)\n        return;\n      }\n\n      let unSortedCoins: Coin[] = Object.values(result.data.coins);\n      let sortedCoins = unSortedCoins.sort(sortCoinsByDescendingPrice);\n\n      let newCointData = {\n        data: {\n          total_cost: result.data.total_cost,\n          coins: sortedCoins\n        }\n      }\n      setData(new CoinData(newCointData))\n      setHasSearched(true);\n\n    }).catch((err) => {\n      setData(new CoinData({\n        data: {\n          coins: undefined,\n          total_cost: 0\n        }\n      }));\n      setErrorOnSearch(true)\n      setDisplayingCoins(false)\n    })\n      .finally(() => {\n        setIsSearching(false);\n      })\n  }\n\n  return (\n      <Container className={classes.container} maxWidth=\"xl\">\n        <Grid container\n          style={{ height: '100%' }}\n          direction=\"column\"\n          alignItems=\"center\">\n\n          <Typography align=\"center\" variant=\"h3\" component=\"h3\" className={classes.textPadding}gutterBottom>\n            awardit\n          </Typography>\n          <Typography align=\"center\" variant=\"h5\" component=\"h1\" gutterBottom>\n            calculate the cost of awards on a reddit post\n          </Typography>\n\n          <div className={hasSearched ? classes.raisedSearchBar : classes.searchBar}>\n            <SearchBar\n              value={url}\n              setIsSearchBarFocused={setIsSearchBarFocused}\n              onSearchClick={onSearchClick}\n              handleChange={handleChange}\n              isSearching={isSearching} />\n          </div>\n\n          <div className={classes.awardsGrid}>\n            <Slide direction=\"up\" in={hasSearched} timeout={1000} onEntered={() => setDisplayingCoins(true)} onExiting={() => setDisplayingCoins(false)} mountOnEnter unmountOnExit>\n              <Grid \n                alignItems=\"center\"\n                justify=\"center\"\n                container spacing={3}\n                >\n                {\n                  data.coins?.map((coin, idx) => {\n                    return (\n                      <Grid key={idx} item={true} lg={2} xl={2} xs={12} sm={6} md={3}>\n                        <Tooltip TransitionComponent={Fade} TransitionProps={{ timeout: 600 }} title={coin.coin_price + \" coins\"} placement=\"top\" aria-label=\"coin price\" arrow>\n                          <Paper className={classes.paper}>\n                            <Avatar alt={coin.name + ' icon'} src={coin.icon} />\n                            <Typography className={classes.awardCardText} variant=\"body1\" gutterBottom>\n                              {coin.count + 'x ' + coin.name}\n                            </Typography>\n                          </Paper>\n                        </Tooltip>\n                      </Grid>\n                    )\n                  })\n                }\n              </Grid>\n            </Slide>\n            {\n              errorOnSearch ?\n                <Typography align='center' variant=\"body1\" className={classes.errorText} gutterBottom>\n                  {\"error on search :( I'm either broken or your url is malformed - make sure the ID of the post is in the url\"}\n                </Typography>\n\n                : null\n            }\n\n            {\n              noAwardsForPost ?\n                <Typography align=\"center\" variant=\"body1\" gutterBottom className={classes.textPadding}>\n                  {'no awards on that post :('}\n                </Typography> :\n                null\n            }\n\n            {\n              displayingCoins ?\n                <Typography align=\"center\" variant=\"body1\" gutterBottom className={classes.textPadding}>\n                  {'total estimated cost of coins is $' + lowestPossiblePrice(data.totalCost) + ' to $' + highestPossiblePrice(data.totalCost)}\n                </Typography> :\n                null\n            }\n          </div>\n\n        </Grid>\n      </Container >\n  );\n}\n","import React from 'react';\n\nimport Copyright from './components/Copyright';\nimport HomePage from './HomePage'\n\nexport default function App() {\n\n  return (\n    <div style={{ height: '100vh' }}>\n      <div style={{display: 'flex', flexDirection: 'column', minHeight: '100%'}}>\n        <div style={{flex: 1}}>\n          <HomePage />\n        </div>\n        <div style={{ padding: '20px' }}>\n          <Copyright />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}