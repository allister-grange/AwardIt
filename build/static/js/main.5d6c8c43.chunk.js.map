{"version":3,"sources":["components/SearchBar.tsx","components/Copyright.tsx","App.tsx","theme.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","alignContent","margin","spacing","textField","width","useOutlinedInputStyles","borderColor","focused","notchedOutline","SearchBar","props","classes","outlinedInputClasses","className","FormControl","style","clsx","variant","InputLabel","htmlFor","OutlinedInput","fullWidth","id","value","onFocus","setIsSearchBarFocused","onChange","handleChange","onKeyPress","ev","key","onSearchClick","endAdornment","InputAdornment","position","IconButton","type","aria-label","onClick","isSearching","CircularProgress","color","size","labelWidth","footer","left","bottom","right","paddingBottom","Copyright","Typography","align","Link","href","Date","getFullYear","require","config","CoinData","results","totalCost","coins","this","data","total_cost","createStyles","flexWrap","searchBar","paddingTop","awardsGrid","flexGrow","padding","paper","textAlign","palette","text","secondary","height","alignItems","background","awardCardText","paddingLeft","raisedSearchBar","errorText","App","process","REDDIT_SECRET","apiPrice","useState","hasSearched","setHasSearched","errorOnSearch","setErrorOnSearch","noAwardsForPost","setNoAwardsForPost","setIsSearching","displayingCoins","setDisplayingCoins","undefined","setData","React","url","setUrl","roundToTwoDp","input","Math","round","Number","EPSILON","sortCoinsByDescendingPrice","coinA","coinB","priceA","coin_price","Container","maxWidth","Box","my","component","gutterBottom","axios","get","then","result","Object","keys","length","sortedCoins","values","sort","newCointData","catch","err","finally","prop","event","target","Slide","direction","in","timeout","onEntered","onExiting","mountOnEnter","unmountOnExit","Grid","justify","container","map","coin","idx","item","lg","xl","xs","sm","md","Tooltip","TransitionComponent","Fade","TransitionProps","title","placement","arrow","Paper","Avatar","alt","name","src","icon","count","highestPossiblePrice","createMuiTheme","primary","main","error","red","A400","default","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector"],"mappings":"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","file":"static/js/main.5d6c8c43.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport FilledInput from '@material-ui/core/FilledInput';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nimport Box from '@material-ui/core/Box';\n\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Search from '@material-ui/icons/Search'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignContent: 'center',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  textField: {\n    width: '25ch',\n  },\n}));\n\nconst useOutlinedInputStyles = makeStyles(theme => ({\n  root: {\n    \"& $notchedOutline\": {\n      borderColor: \"grey\"\n    },\n    \"&:hover $notchedOutline\": {\n      borderColor: \"coral\",\n    },\n    \"&$focused $notchedOutline\": {\n      borderColor: \"coral\"\n    }\n  },\n  focused: {},\n  notchedOutline: {}\n}));\n\nexport default function SearchBar(props: any) {\n  const classes = useStyles();\n  const outlinedInputClasses = useOutlinedInputStyles();\n\n  return (\n    <div className={classes.root}>\n            <FormControl style={{width:'calc(100% - 150px)'}} className={clsx(classes.margin, classes.textField)} variant=\"outlined\">\n            <InputLabel htmlFor=\"outlined-adornment\">post url</InputLabel>\n            <OutlinedInput\n                fullWidth={true}\n                id=\"outlined-adornment\"\n                classes={outlinedInputClasses}\n                value={props.value}\n                onFocus={props.setIsSearchBarFocused(true)}\n                onChange={props.handleChange()}\n                onKeyPress={(ev) => {\n                  if (ev.key === 'Enter') {\n                      props.onSearchClick()\n                  }\n                }}          \n                endAdornment={\n                <InputAdornment position=\"end\">\n                    <IconButton type=\"submit\" aria-label=\"search\" onClick={props.onSearchClick}>\n                        {props.isSearching ? <CircularProgress style={{color: 'coral'}} size={28}/> :  <Search style={{color: 'coral'}}/>}\n                    </IconButton>\n                </InputAdornment>\n                }\n                labelWidth={55}\n            />\n            </FormControl>\n        </div>\n  );\n}","import React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\nimport clsx from \"clsx\";\n\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    footer: {\n      position:'absolute',\n      left:0,\n      bottom:0,\n      right:0,\n      paddingBottom: '20px'\n    },\n  }));\n  \n\nexport default function Copyright() {\n\n    const classes = useStyles();\n  \n    return (\n        <Typography className='footer' variant=\"body2\" color=\"textSecondary\" align=\"center\">\n          {'Copyright © '}\n          <Link color=\"inherit\" href=\"https://material-ui.com/\">\n            Allister Grange\n          </Link>{' '}\n          {new Date().getFullYear()}\n          {'.'}\n          <br />\n          {'using estimates from the cheapest and most expensive bundles found at '}\n          <Link color=\"inherit\" href=\"https://www.reddit.com/coins/\">\n              {'https://www.reddit.com/coins'}\n          </Link>\n        </Typography>\n    );\n  }","import React, { useEffect, useState, useRef } from 'react';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Link from '@material-ui/core/Link';\nimport SearchBar from './components/SearchBar';\nimport Copyright from './components/Copyright';\nimport Fade from '@material-ui/core/Fade';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Slide from '@material-ui/core/Slide';\n\nimport clsx from \"clsx\";\n\nimport axios from 'axios';\n\nrequire('dotenv').config()\n\nclass CoinData {\n  totalCost?: number;\n  // todo change this into another object from an any\n  coins?: Array<any>;\n\n  constructor(results: any) {\n    // need to convert from object to array here\n    this.coins = results.data.coins;\n    this.totalCost = results.data.total_cost;\n    // console.log(results)\n  }\n}\n\nclass Coin {\n  coin_price: number;\n  count: number;\n  icon: string;\n  name: string;\n\n  constructor(coin_price: number, count: number, icon: string, name: string) {\n    this.coin_price = coin_price;\n    this.count = count;\n    this.icon = icon;\n    this.name = name;\n\n  }\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing(1),\n    },\n    textField: {\n      width: '25ch',\n    },\n    searchBar: {\n      paddingTop: 'calc(50vh - 200px)',\n    },\n    footer: {\n      position: 'absolute',\n      left: 0,\n      bottom: 0,\n      right: 0,\n      paddingBottom: '20px'\n    },\n    awardsGrid: {\n      flexGrow: 1,\n      padding: '50px',\n      // backgroundColor: '#F5F5F5',\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height: '80px',\n      display: 'flex',\n      alignItems: 'center',\n      '&:hover': {\n        background: \"coral\",\n        \"& $awardCardText\": {\n          color: \"white\"\n        }\n      },\n    },\n    awardCardText: {\n      paddingLeft: '15px',\n    },\n    raisedSearchBar: {\n      // paddingTop: 'calc(50vh - 150px)',\n    },\n    errorText: {\n      color: 'red'\n    }\n  }));\n\n\nexport default function App() {\n\n  //https://www.reddit.com/api/v1/authorize?client_id=T6Wd6ejCgIp1Pw&response_type=code&state=poo&redirect_uri=http://localhost:8080&duration=permanent&scope=identity\n\n  //todo figure out env files for client side\n  const lambdaEndPoint = 'https://q8sjefj7s6.execute-api.ap-southeast-2.amazonaws.com/default/RedditAwardCount?url=';\n  const secret = process.env.REDDIT_SECRET;\n\n  const classes = useStyles();\n\n  const [hasSearched, setHasSearched] = useState(false);\n  const [errorOnSearch, setErrorOnSearch] = useState(false);\n  const [noAwardsForPost, setNoAwardsForPost] = useState(false);\n  const [isSearching, setIsSearching] = useState(false);\n  const [displayingCoins, setDisplayingCoins] = useState(false);\n  const [searchBarFocus, setIsSearchBarFocused] = useState(false);\n  const [data, setData] = useState(new CoinData({\n    data: {\n      coins: undefined,\n      total_cost: 0\n    }\n  }));\n  const [url, setUrl] = React.useState('');\n\n  const handleChange = (prop: any) => (event: any) => {\n    setUrl(event.target.value);\n  };\n\n  const highestPossiblePrice = (apiPrice: any) => {\n\n    const lowestCoinRatio: number = 1.99 / 500;\n\n    let highestCostPrice = lowestCoinRatio * apiPrice\n\n    return roundToTwoDp(highestCostPrice);\n  }\n\n  const lowestPossiblePrice = (apiPrice: any) => {\n\n    const highestCoinRatio: number = 99.99 / 40000;\n\n    let lowestCostPrice = highestCoinRatio * apiPrice\n\n    return roundToTwoDp(lowestCostPrice);\n  }\n\n  const roundToTwoDp = (input: number) => {\n    return Math.round((input + Number.EPSILON) * 100) / 100\n  }\n\n\n  const getDataFromAPI = () => {\n\n    // const httpOptions = {\n    //   headers: {\n    //     'Content-Type': 'application/x-www-form-urlencoded',\n    //     'Authorization': 'Bearer ',\n    //   },\n    // };\n\n    // return axios.get(lambdaEndPoint + 'ewt93j');\n    return axios.get(lambdaEndPoint + url);\n  }\n\n  const sortCoinsByDescendingPrice = (coinA: Coin, coinB: Coin) => {\n    const priceA = coinA.coin_price;\n    const priceB = coinB.coin_price;\n\n    return priceB - priceA;\n  }\n\n  //will be used for css transition\n  const onSearchClick = () => {\n\n    if(url === '')\n      return\n\n    setIsSearching(true)\n    setNoAwardsForPost(false)\n    setErrorOnSearch(false)\n\n    let result = getDataFromAPI().then((result) => {\n\n      // console.log(result)\n\n      if (Object.keys(result.data.coins).length === 0 ){\n        setNoAwardsForPost(true)\n        return;\n      }\n\n      let unSortedCoins: Coin[] = Object.values(result.data.coins);\n      let sortedCoins = unSortedCoins.sort(sortCoinsByDescendingPrice);\n\n      let newCointData = {\n        data: {\n          total_cost: result.data.total_cost,\n          coins: sortedCoins\n        }\n      }\n      setData(new CoinData(newCointData))\n      setHasSearched(true);\n\n    }).catch((err) => {\n      setData(new CoinData({\n        data: {\n          coins: undefined,\n          total_cost: 0\n        }\n      }));\n      setErrorOnSearch(true)\n      setDisplayingCoins(false)\n    })\n      .finally(() => {\n        setIsSearching(false);\n      })\n  }\n\n  return (\n    <Container maxWidth=\"xl\">\n      <Box my={4}>\n        <Typography align=\"center\" variant=\"h3\" component=\"h3\" gutterBottom>\n          awardit\n        </Typography>\n        <Typography align=\"center\" variant=\"h5\" component=\"h1\" gutterBottom>\n          calculate the cost of awards on a reddit post\n        </Typography>\n        <div className={hasSearched ? classes.raisedSearchBar : classes.searchBar}>\n          <SearchBar\n            // 4 awards\n            // value={'gs563k'} \n            //default\n            value={url}\n            setIsSearchBarFocused={setIsSearchBarFocused}\n            // value={'62sjuh'}\n            onSearchClick={onSearchClick}\n            handleChange={handleChange}\n            isSearching={isSearching} />\n        </div>\n\n\n        <div className={classes.awardsGrid}>\n          <Slide direction=\"up\" in={hasSearched} timeout={1000} onEntered={() => setDisplayingCoins(true)} onExiting={() => setDisplayingCoins(false)} mountOnEnter unmountOnExit>\n            <Grid alignItems=\"center\"\n              justify=\"center\"\n              container spacing={3}>\n              {\n                data.coins?.map((coin, idx) => {\n                  return (\n                    <Grid key={idx} item={true} lg={2} xl={2} xs={6} sm={4} md={3}>\n                      <Tooltip TransitionComponent={Fade} TransitionProps={{ timeout: 600 }} title={coin.coin_price + \" coins\"} placement=\"top\" aria-label=\"coin price\" arrow>\n\n                        <Paper className={classes.paper}>\n                          <Avatar alt={coin.name + ' icon'} src={coin.icon} />\n                          <Typography className={classes.awardCardText} variant=\"body1\" gutterBottom>\n                            {coin.count + 'x ' + coin.name}\n                          </Typography>\n                        </Paper>\n                      </Tooltip>\n\n                    </Grid>\n                  )\n                })\n              }\n            </Grid>\n          </Slide>\n          {\n            errorOnSearch ?\n              <Typography align='center' variant=\"body1\" className={classes.errorText} gutterBottom>\n                {\"error on search :( I'm either broken or your url is malformed - make sure the ID of the post is in the url\"}\n              </Typography>\n\n              : null\n          }\n\n          {\n            noAwardsForPost ?\n              <Typography align=\"center\" variant=\"body1\" gutterBottom>\n                {'no awards on that post :('}\n              </Typography> :\n              null\n          }\n        </div>\n\n        {\n          displayingCoins ?\n            <Typography align=\"center\" variant=\"body1\" gutterBottom>\n              {'total estimated cost of coins is $' + lowestPossiblePrice(data.totalCost) + ' to $' + highestPossiblePrice(data.totalCost)}\n            </Typography> :\n            null\n        }\n\n\n\n\n        <div className={classes.footer}>\n          <Copyright />\n        </div>\n      </Box>\n    </Container >\n  );\n}\n","import red from '@material-ui/core/colors/red';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\n// A custom theme for this app\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6',\n    },\n    secondary: {\n      main: '#19857b',\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: '#fff',\n    },\n  },\n});\n\nexport default theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport App from './App';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}